
;this file is automatically generated: Tue May 10 13:41:07 IST 2022

;declarations generated

(declare-fun oclExcludes ( Int Int) Bool)
(declare-fun obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c ( Int) Int)
(declare-fun oclSelect ( Int Bool) Int)
(declare-fun k194936920_2f58_4437_9c1e_42030fed39c5 () Int)
(declare-fun Cardinality ( Int) Int)
(declare-fun type_2172107c_5236_4eda_80c8_9cf00234a58c_Person ( Int) Bool)
(declare-fun type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet ( Int) Bool)
(declare-fun pet_weight ( Int) Int)
(declare-fun rel_07d19979_8320_43e1_893b_4c6460723bf3_BelongsTo ( Int Int) Bool)
(declare-fun person_height ( Int) Int)
(declare-fun k26622cb0_aa17_43ab_97ba_8ab12eeca675 () Int)
(declare-fun person_weight ( Int) Int)
(declare-fun container_ ( Int) Int)
(declare-fun person_age ( Int) Int)
(declare-fun k42515245_a30e_419b_8437_187eb5184a6b () Int)
(declare-fun oclIncludes ( Int Int) Bool)
(declare-fun aux1 () Int)
(declare-fun aux0 () Int)
(declare-fun aux3 () Int)
(declare-fun aux2 () Int)
(declare-fun aux8 () Int)
(declare-fun aux5 () Int)
(declare-fun k2699d00df_a0a1_41be_be47_96e7059f106c () Int)
(declare-fun aux4 () Int)
(declare-fun aux7 () Int)
(declare-fun aux6 () Int)
(declare-fun weight7 () Int)
(declare-fun weight6 () Int)
(declare-fun weight5 () Int)
(declare-fun weight4 () Int)
(declare-fun weight3 () Int)
(declare-fun ObjAt ( Int Int) Int)
(declare-fun weight2 () Int)
(declare-fun weight1 () Int)
(declare-fun weight0 () Int)

;formula(s) generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_07d19979_8320_43e1_893b_4c6460723bf3_BelongsTo ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c x )   ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c y )  )  (and ( type_2172107c_5236_4eda_80c8_9cf00234a58c_Person x )  ( type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  0)) (and (= (* ( Cardinality ( container_ y )  )  0) (* ( Cardinality ( container_ x )  )  k42515245_a30e_419b_8437_187eb5184a6b)) (>= k42515245_a30e_419b_8437_187eb5184a6b 0))) (and (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  k26622cb0_aa17_43ab_97ba_8ab12eeca675)) (>= k26622cb0_aa17_43ab_97ba_8ab12eeca675 0))) (and (= (* ( Cardinality ( container_ x )  )  k194936920_2f58_4437_9c1e_42030fed39c5) (* ( Cardinality ( container_ y )  )  k2699d00df_a0a1_41be_be47_96e7059f106c)) (and (>= k194936920_2f58_4437_9c1e_42030fed39c5 0) (>= k2699d00df_a0a1_41be_be47_96e7059f106c 0)))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_07d19979_8320_43e1_893b_4c6460723bf3_BelongsTo ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c x )   ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c y )  )  (and ( type_2172107c_5236_4eda_80c8_9cf00234a58c_Person x )  ( type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  0)) (and (= (* ( Cardinality ( container_ y )  )  0) (* ( Cardinality ( container_ x )  )  k42515245_a30e_419b_8437_187eb5184a6b)) (>= k42515245_a30e_419b_8437_187eb5184a6b 0))) (and (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  k26622cb0_aa17_43ab_97ba_8ab12eeca675)) (>= k26622cb0_aa17_43ab_97ba_8ab12eeca675 0))) (and (= (* ( Cardinality ( container_ x )  )  k194936920_2f58_4437_9c1e_42030fed39c5) (* ( Cardinality ( container_ y )  )  k2699d00df_a0a1_41be_be47_96e7059f106c)) (and (>= k194936920_2f58_4437_9c1e_42030fed39c5 0) (>= k2699d00df_a0a1_41be_be47_96e7059f106c 0)))))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((v Int)) (=> ( type_2172107c_5236_4eda_80c8_9cf00234a58c_Person v )  (> ( person_age ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c v )  )  3))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (=> (= aux1 0) (= weight0 1)) (=> (= aux1 1) (= weight0 0))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((v Int)) (=> ( type_2172107c_5236_4eda_80c8_9cf00234a58c_Person v )  (< ( person_age ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c v )  )  8))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (= aux2 0) (= weight1 1)) (=> (= aux2 1) (= weight1 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((p Int)) (=> ( type_2172107c_5236_4eda_80c8_9cf00234a58c_Person p )  (exists ((v Int)) (and ( type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet v )  ( rel_07d19979_8320_43e1_893b_4c6460723bf3_BelongsTo ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c p )   ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c v )  ) )))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight2 1)) (=> (= aux3 1) (= weight2 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (forall ((p Int)) (=> (and ( type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet p )  ( rel_07d19979_8320_43e1_893b_4c6460723bf3_BelongsTo ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c p )   ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c p )  ) ) (> ( pet_weight ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c p )  )  5))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight3 1)) (=> (= aux4 1) (= weight3 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_2172107c_5236_4eda_80c8_9cf00234a58c_Person v )  (<= ( person_age ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c v )  )  0))) (forall ((v Int)) (=> ( type_2172107c_5236_4eda_80c8_9cf00234a58c_Person v )  (> ( person_age ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c v )  )  99)))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight4 1)) (=> (= aux5 1) (= weight4 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (exists ((p Int)) (and ( type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet p )  (> ( pet_weight ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c p )  )  5))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight5 1)) (=> (= aux6 1) (= weight5 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet v )  (>= ( pet_weight ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c v )  )  0))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight6 1)) (=> (= aux7 1) (= weight6 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet v )  (< ( pet_weight ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c v )  )  4))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight7 1)) (=> (= aux8 1) (= weight7 0))))
(assert (exists ((o Int)) ( type_2172107c_5236_4eda_80c8_9cf00234a58c_Person ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c o )  ) ))
(assert (exists ((o Int)) ( type_a1d8639f_609f_4383_9d25_383f5ed311d5_Pet ( obj_475f8ed7_4dd2_4f09_bd37_6c5d6118803c o )  ) ))
(assert (= (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) 6))

(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 0)) ))

(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 0)) (= weight6 1)) (= weight7 1)) ))
