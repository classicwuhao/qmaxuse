model TEST

class A
attributes
	a1:	Integer
	a2:	Integer
	a3:	Integer
	a4:	Integer
end

class B
attributes
	b1:	Integer
	b2:	Boolean
	b3:	Integer
end

class C < A,B
attributes
	c1:	Integer
	c2:	Integer
end

class D
attributes
	d1: Integer
end

class E
attributes
	e1: Integer
	e2: Integer
end

association AB between
	A [1..1] role a
	B [0..*] role b
end

association CA between
	C [1..*] role c
	A [1..*] role a1
end

association DB between
	D [1..*] role d
	B [1..*] role b
end

association CB between
	C [1..*] role c
	E [1..*] role e
end

association BE between
	B [1..*] role b
	E [1..*] role e1
end

constraints

context A
	inv inv1: self.a1 > 10
	inv inv2: self.a3 + self.a4 = self.a1+self.a2

context B
	inv inv3: self.b2=true
--	inv inv4: self.d->forAll(d|d.b->notEmpty())
	inv inv4: B.allInstances()->forAll(b|b.d->notEmpty())
	
context C
	inv inv5: self.c1 > 0 and self.c1 < 0
	inv inv6: self.a4 <= 0 and self.b2=true 
	
context D
	inv inv7: self.b->forAll(b|b.b3>0)

module queryTest0
	q0 = select A.*, A:*:* with A::* + select B.* with B::* 
	q1 = select *.*, *:*:* with *::* - select C.*, C:*:* with C::*
	q2 = select A.*, B.* with A::* & select C.* with C::*
	q3 = select A:*:*, B:*:*, C:*:* with A::*, B::*
	q4 = select D.* with D::* + select C.* with C::*
	q5 = select *.* with *::*
end

module queryTest1
	q0 = select *.*, *:*:* with *::* & select A.* , A:*:*, *:*:A with A::*
end

